<div align="center">

### **🚀 Generated by LaunchFlow 🚀**

📖 [LaunchFlow Docs](https://docs.launchflow.com/) &nbsp; | &nbsp; ⚡ [Quickstart](https://docs.launchflow.com/docs/quickstart) &nbsp; | &nbsp; 👋 [Slack](https://join.slack.com/t/launchflowusers/shared_invite/zt-27wlowsza-Uiu~8hlCGkvPINjmMiaaMQ)

</div>

## TODO(developer): Add your own README content here

## ⚙️ Install LaunchFlow

This application is automated with [LaunchFlow](https://docs.launchflow.com/). <br/> Make sure you have it installed before running the commands below.


```bash
# Install LaunchFlow with pip
pip install launchflow[{{ cloud_provider }}]

# NOTE: If you are using zsh, you may need to escape the square brackets
pip install launchflow\[{{ cloud_provider }}\]
```

If this is your first time using LaunchFlow, you will need to connect your cloud provider account.

```bash
# This will open a browser window to authenticate with {{ cloud_provider.upper() }}
launchflow connect --provider {{ cloud_provider }}
```

## ⚒️ Create your Infrastructure

Automatically <strong>find</strong> and <strong>create</strong> all infrastructure used by your application.

```bash
launchflow create
```

Learn how this command works in the [LaunchFlow Docs](https://docs.launchflow.com/reference/cli#launchflow-create).

## 📦 Setup Django

Django applications require a few steps to get started.

Install the dependencies in `requirements.txt`.

```bash
pip install -r requirements.txt
```

Create and apply the database migrations.

```bash
python manage.py makemigrations && python manage.py migrate
```

Add yourself as a superuser to the Django application.

```bash
python manage.py createsuperuser
```

Load static files used by the Admin UI into the Django application (CSS, JS, images).

```bash
python manage.py collectstatic
```

## 🏃 Run your Application (local)

Run the Django application locally using [Django's Development Server](https://docs.djangoproject.com/en/5.0/intro/tutorial01/#the-development-server).

```bash
python manage.py runserver 127.0.0.1:8000
```

#### NOTE: The Django Development Server is not suitable for production.
#### The `Dockerfile` and `launchflow deploy` command uses [Gunicorn](https://gunicorn.org/) instead.

## 🚀 Deploy your Application (remote)

Automatically <strong>build</strong> and <strong>deploy</strong> the Django application to your cloud.

```bash
launchflow deploy
```

Learn how this command works in the [LaunchFlow Docs](https://docs.launchflow.com/reference/cli#launchflow-deploy).

## 🧹 Clean up your infrastructure

Automatically <strong>delete</strong> all infrastructure <strong>NOT</strong> currently used in your application code.

This is useful for finding and removing old resources that are no longer needed.

```bash
launchflow clean
```

Learn how this command works in the [LaunchFlow Docs](https://docs.launchflow.com/reference/cli#launchflow-clean).

## 💥 Destroy your infrastructure

Automatically <strong>delete</strong> all infrastructure associated with your application.

```bash
launchflow destroy
```

Learn how this command works in the [LaunchFlow Docs](https://docs.launchflow.com/reference/cli#launchflow-destroy).
